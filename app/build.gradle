/*
 * Copyright (c) 2017 Nicholas van Dyke. All rights reserved.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 'android-P'
    defaultConfig {
        applicationId "com.vandyke.sia"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 3007
        versionName "0.3.7"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        /* lets us not shrink debug builds, for faster build times. Not necessary for release builds, since we shrink those */
        multiDexEnabled true
    }

    buildTypes {
        release {
            lintOptions {
                checkReleaseBuilds false
            }
            shrinkResources true
            /* Using this combination of the following two options lets us minify (remove unused methods + classes)
             * using the Android Gradle Plugin's minifier, which doesn't obfuscate and can also be used in incremental builds */
            minifyEnabled true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    splits {
        /* see app/src/main/cpp/main.c for why we use ABI splits */
        abi {
            enable true
            reset()
            include 'arm64-v8a', 'x86'
            universalApk false
        }
    }

    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
    }

    androidExtensions {
        experimental = true
    }
}

// TODO: remove this once androidx.browser build error is fixed, and switch to CustomTabs in GenUtil#launchCustomTabs
configurations {
    compile.exclude group: 'androidx.browser', module: 'browser'
}

dependencies {
    ext.support_version = '1.0.0'

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    /* kotlin stuff */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.0.0'

    /* testing */ // TODO: change to JUnit 5
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'org.amshove.kluent:kluent-android:1.35'
    testImplementation 'org.amshove.kluent:kluent:1.38' // TODO: replace with KotlinTest
    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    /* support library */ // TODO: update to androidx once it's stable
    implementation "androidx.legacy:legacy-support-v4:$support_version"
    implementation "com.google.android.material:material:$support_version"
    implementation "androidx.recyclerview:recyclerview:$support_version"
    implementation "androidx.cardview:cardview:$support_version"
    implementation "androidx.browser:browser:$support_version"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    /* UI */
    implementation 'com.hannesdorfmann.mosby3:mvi:3.1.0'
    implementation("com.mikepenz:materialdrawer:6.0.6@aar") { transitive = true }
    implementation 'co.zsmb:materialdrawer-kt:1.3.3'
    implementation 'com.github.medyo:android-about-page:1.2.2'
    implementation 'com.github.kenglxn.QRGen:android:2.3.0'
    implementation 'me.dm7.barcodescanner:zxing:1.9.3'
    implementation 'com.github.clans:fab:1.6.4'
    implementation 'me.zhanghai.android.materialprogressbar:library:1.4.2'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'
    implementation 'io.github.tonnyl:light:1.0.0'
    implementation 'net.cachapa.expandablelayout:expandablelayout:2.9.2'
    implementation 'it.sephiroth.android.library.targettooltip:target-tooltip-library:1.3.15'

    /* simplified preferences */
    implementation 'com.chibatching.kotpref:kotpref:2.2.0'
    implementation 'com.chibatching.kotpref:enum-support:2.2.0'
    implementation 'androidx.preference:preference:1.0.0'
    implementation 'com.takisoft.preferencex:preferencex:1.0.0'
    implementation 'com.takisoft.preferencex:preferencex-simplemenu:1.0.0'

    /* networking */
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'

    /* RxJava */
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    implementation 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:2.1.1'

    /* Android Architecture Components */
    ext.lifecycle_version = "2.0.0"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"

    /* Room, for local data persistence */
    ext.room_version = "2.1.0-alpha01"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.paging:paging-runtime:2.0.0"

    /* Dagger, for DI */
    implementation 'com.google.dagger:dagger:2.12'
    kapt 'com.google.dagger:dagger-compiler:2.12'

    /* Moshi (JSON converter) */
    implementation 'com.squareup.moshi:moshi:1.6.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.3.0'

    /* for crash reporting/analytics */
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.5'
    implementation 'com.google.firebase:firebase-core:16.0.4'

    implementation 'com.android.billingclient:billing:1.0'

    /* check for leaks */
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
}

repositories {
    mavenCentral()
}

/* ensure the no-op leakcanary dependency is always used in unit tests */
configurations.all { config ->
    if (config.name.contains('UnitTest')) {
        config.resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
            }
        }
    }
}

apply plugin: 'com.google.gms.google-services'
